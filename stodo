#!/bin/env python

import sys
import os
import getopt

# globals
version = "a.1"
database = os.path.expanduser("~/.stodo")

def usage(): #simple function to print the help/usage
    print("\n---")
    print("stodo - simple TODO cli application")
    print("v.", version, "by Micha≈Ç Walczak (mw@michalwalczak.eu)")
    print("---")
    print("Usage:")
    print("Only the first option on the command line will execute each run.")
    print("-h / --help\n\tprint usage summary (this)")
    print("-l / --list\n\tlist all of the saved items, enumerated")
    print("-c / --count\n\tprint a simple count of all saved items")
    print("-a / --add \"[item]\"\n\tadd text between quotes as a new item")
    print("-r / --remove [item number]\n\tremove the specified item")

    print("\n")

def file_exists():
    # Check if the database file exists and attempt to create it if it doesn't
    try:
        data_file = open( database, "a+");
    except PermissionError:
        print("Error: Database file not found, and cannot be created.")
        print("Make sure you have write and read access to the folder (user's home folder by default).")
        sys.exit(2)

    data_file.close()

def count_items():
    with open(database) as data_file:
        i = - 1
        for i, l in enumerate(data_file):
            pass
        return i + 1

    data_file.close()

def display_list():
    data_file = open( database, "r")
    s = ""
    for i in range(count_items()):
        s += (data_file.readline())

    print(s.rstrip())

    data_file.close()

def display_count():
    file_exists()
    print(count_items())

def add_item(add_string):
    file_exists()

    lines = [line.rstrip('\n') for line in open(database)]
    highest_number = [token for token in lines[len(lines)-1].split() if token.isdigit()][0]
    highest_number = int(highest_number)+1
    
    data_file = open( database, "a+")
    data_file.write(str(highest_number) + " - " + add_string + "\n")
    data_file.close()


def remove_item(item_number):
    print("This function will remove item number", item_number + ".")

def main(argv):
    try:
        opts, args = getopt.getopt(argv, "hlca:r:", ["help", "list", "count", "add=", "remove="])

    except getopt.GetoptError:
        usage()
        sys.exit(2)

    if len(opts) == 0:
        usage()
        sys.exit()

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
        elif opt in ("-l", "--list"):
            display_list()
            sys.exit()
        elif opt in ("-c", "--count"):
            display_count()
            sys.exit()
        elif opt in ("-a", "--add"):
            add_item(arg)
            sys.exit()
        elif opt in ("-r", "--remove"):
            if arg.isdigit():
                remove_item(arg)
                sys.exit()
            else:
                print("-r / --remove accepts only natural numbers")
                sys.exit()

if __name__ == "__main__":
    main(sys.argv[1:])